{"title":"$:/plugins/wikilabs/click-effect","name":"Click Effect","description":"A simple mouse-button click effect","author":"pmario","core-version":">=5.1.22","version":"0.2.0","list":"readme license history","plugin-type":"plugin","dependents":"","type":"application/json","text":"{\n    \"tiddlers\": {\n        \"$:/plugins/wikilabs/click-effect/clickEffectStyles\": {\n            \"title\": \"$:/plugins/wikilabs/click-effect/clickEffectStyles\",\n            \"tags\": \"$:/tags/Stylesheet\",\n            \"type\": \"text/css\",\n            \"text\": \".pulse {\\n\\tbackground: lightgreen;\\n\\tanimation: pulse 0.6s ease-out;\\n\\tz-index: 99999; \\n}\\n\\n@keyframes pulse {\\n\\t0% { opacity: 1; }\\n\\t100% { opacity: 0.5; }\\n}\\n\\n.clickEffect {\\n\\tposition: fixed;\\n\\tbox-sizing: border-box;\\n\\tborder-style: solid;\\n\\tborder-color: #aaa;\\n\\tborder-radius: 50%;\\n\\tanimation: clickEffect 0.4s ease-out;\\n\\tz-index: 99999;\\n}\\n\\n@keyframes clickEffect {\\n\\t0% {\\n\\t\\topacity: 1;\\n\\t\\twidth: 0.5em;\\n\\t\\theight: 0.5em;\\n\\t\\tmargin: -0.25em;\\n\\t\\tborder-width: 0.5em;\\n\\t}\\n\\t100% {\\n\\t\\topacity: 0.2;\\n\\t\\twidth: 5em;\\n\\t\\theight: 5em;\\n\\t\\tmargin: -2.5em;\\n\\t\\tborder-width: 0.1em;\\n\\t}\\n}\"\n        },\n        \"$:/config/clickEffect\": {\n            \"title\": \"$:/config/clickEffect\",\n            \"text\": \"clickEffect\"\n        },\n        \"$:/core/modules/utils/dom-tweaks.js\": {\n            \"title\": \"$:/core/modules/utils/dom-tweaks.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/utils/dom-tweaks.js\\ntype: application/javascript\\nmodule-type: utils\\n\\nFix .pulseElement()\\nAdd . clcikAnimation()\\n\\nVarious static DOM-related utility functions.\\n\\\\*/\\n\\n(function(){\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nFIX - FIX - FIX - FIX - FIX - FIX - should be part of the core\\nPulse an element for debugging purposes\\n*/\\nexports.pulseElement = function(element) {\\n\\tvar eventName = $tw.utils.convertEventName(\\\"animationEnd\\\");\\n\\t// Event handler to remove the class at the end\\n\\telement.addEventListener(eventName,function handler(event) {\\n\\t\\telement.removeEventListener(eventName,handler,false);\\n\\t\\t$tw.utils.removeClass(element,\\\"pulse\\\");\\n\\t},false);\\n\\t// Apply the pulse class\\n\\t$tw.utils.removeClass(element,\\\"pulse\\\");\\n\\t$tw.utils.forceLayout(element);\\n\\t$tw.utils.addClass(element,\\\"pulse\\\");\\n};\\n\\n/*\\nCursor Click animation. Is useful to create videos\\nThis animation creates its own div element\\nOptions:\\nclickEffect: CSS class name as string with no special formatting eg: clickEffect\\ndomNode: DOM node, that should contain the animated element. eg: rootElement\\nevent: event Object\\n*/\\nexports.clickAnimation = function(options) {\\n\\tvar options = options || {},\\n\\t\\teventName = $tw.utils.convertEventName(\\\"animationEnd\\\"),\\n\\t\\telement = document.createElement(\\\"div\\\");\\n\\n\\telement.className = options.clickEffect || \\\"\\\";\\n\\telement.style.top = options.event.clientY+\\\"px\\\";\\n\\telement.style.left = options.event.clientX+\\\"px\\\";\\n\\toptions.domNode.appendChild(element);\\n\\t// Event handler to remove the element if animation is finished\\n\\telement.addEventListener(eventName,function() {\\n\\t\\telement.parentElement.removeChild(element);\\n\\t\\t}.bind(this),false);\\n}\\n\\n})();\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"utils\"\n        },\n        \"$:/core/modules/utils/dom/popup-tweaks.js\": {\n            \"title\": \"$:/core/modules/utils/dom/popup-tweaks.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/utils/dom/popup-tweaks.js\\ntype: application/javascript\\nmodule-type: utils\\n\\nModule that creates a $tw.utils.Popup object prototype that manages popups in the browser\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n// Configuration tiddler, if click animation shuld be shown!\\nvar CONFIG_CLICK_ANIMATION = \\\"$:/config/clickEffect\\\";\\nvar Popup = require(\\\"$:/core/modules/utils/dom/popup.js\\\").Popup;\\n\\n// CHANGE -  CHANGE -  CHANGE -  CHANGE -  CHANGE\\nPopup.prototype.handleEvent = function(event) {\\n\\tif(event.type === \\\"click\\\") {\\n\\t\\t// Find out what was clicked on\\n\\t\\tvar info = this.popupInfo(event.target),\\n\\t\\t\\tcancelLevel = info.popupLevel - 1;\\n\\t\\t// Don't remove the level that was clicked on if we clicked on a handle\\n\\t\\tif(info.isHandle) {\\n\\t\\t\\tcancelLevel++;\\n\\t\\t}\\n\\t\\t// Cancel\\n\\t\\tthis.cancel(cancelLevel);\\n\\t\\t// Show Click Animation\\n\\t\\tthis.clickAnimation(event);\\n\\t}\\n};\\n\\nPopup.prototype.pulseElement = function(domNode) {\\n\\t$tw.utils.pulseElement(domNode)\\n};\\n\\n/*\\nAnimation Options: ... if configured\\nclickEffect: CSS class name as string with no special formatting eg: clickEffect\\ndomNode: DOM node, that should contain the animated element. eg: rootElement\\nevent: event Object\\n*/\\nPopup.prototype.clickAnimation = function(event) {\\n\\tvar options = {};\\n\\toptions.event = event;\\n\\tvar clickEffect = $tw.wiki.getTiddlerText(CONFIG_CLICK_ANIMATION,\\\"no\\\").trim();\\n\\tif (clickEffect === \\\"clickEffect\\\") {\\n\\t\\toptions = {\\n\\t\\t\\tclickEffect: \\\"clickEffect\\\",\\n\\t\\t\\tdomNode: this.rootElement,\\n\\t\\t\\tevent: event\\n\\t\\t}\\n\\t\\t$tw.utils.clickAnimation(options);\\n\\t} else if (clickEffect === \\\"pulse\\\") {\\n\\t\\tthis.pulseElement(event.target);\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"utils\"\n        },\n        \"$:/plugins/wikilabs/click-effect/history\": {\n            \"title\": \"$:/plugins/wikilabs/click-effect/history\",\n            \"text\": \"V 0.2.0 - 2021.01.04\\n\\n* dom.js overwrite necessary utility functions only\\n** add dom.clickAnimation()\\n** fix dom.pulseElement() ... This should be part of the core\\n* popup.js \\n** add popup.pulseElement()\\n** add popup.clickAnimation()\\n** Change popup.handleEvent()\\n\\nV 0.1.0 - 2020.12.22\\n\\n* initial release\\n* name: click-effect\\n\"\n        },\n        \"$:/plugins/wikilabs/click-effect/license\": {\n            \"title\": \"$:/plugins/wikilabs/click-effect/license\",\n            \"text\": \"[[Click-Effect-Plugin|https://wikilabs.github.io/#click-effect]] (C) Mario Pietsch - 2020-2021\\nhttps://opensource.org/licenses/BSD-3-Clause\\n\"\n        },\n        \"$:/plugins/wikilabs/click-effect/readme\": {\n            \"title\": \"$:/plugins/wikilabs/click-effect/readme\",\n            \"text\": \"! Basics\\n\\nThis plugin shows a little \\\"click animation\\\" if the left mouse button is released\\n\\n! Settings\\n\\nTh current setting is: ''{{$:/config/clickEffect}}''\\n\\n| Setting | Description |h\\n|<$radio field=\\\"text\\\" tiddler=\\\"$:/config/clickEffect\\\" value=\\\"clickEffect\\\"> Click Effect</$radio> |A little click animation is shown at the cursor position |\\n|<$radio field=\\\"text\\\" tiddler=\\\"$:/config/clickEffect\\\" value=\\\"pulse\\\"> Element Pulse</$radio> |The html-element, that is clicked is highlighted |\\n|<$radio field=\\\"text\\\" tiddler=\\\"$:/config/clickEffect\\\" value=\\\"no\\\"> Off</$radio> |No click-animaiton is shown|\\n\\n----\\n\\n''Important'': This plugin modifies several core modules\\n\\n<$list filter=\\\"[[$:/plugins/wikilabs/click-effect]plugintiddlers[]prefix[$:/core/]]\\\"><$link to=<<currentTiddler>>><<currentTiddler>><br></$link></$list>\"\n        }\n    }\n}"}